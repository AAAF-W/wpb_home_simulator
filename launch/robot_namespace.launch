<launch>

  <arg name="robot_namespace"/>
  <arg name="local_x"/>
  <arg name="local_y"/>
  <arg name="local_yaw"/>
  <group ns="$(arg robot_namespace)">
      <param name="tf_prefix" value="$(arg robot_namespace)" />
      <!-- Spawn a robot into Gazebo -->
      <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find wpb_home_simulator)/models/wpb_home.model -x $(arg local_x) -y $(arg local_y) -z 0 -Y $(arg local_yaw) -urdf -model $(arg robot_namespace)" />

      <!-- wpb_home_agnet -->
      <node pkg="wpb_home_agent" type="wpb_home_agent_node" name="wpb_home_agent_node" output="screen">
        <rosparam file="$(find wpb_home_simulator)/config/$(arg robot_namespace).yaml" command="load" />
      </node>

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find wpb_home_tutorials)/maps/map.yaml" />

    <!--- Run AMCL -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen" >
      <!-- Publish scans from best pose at a max of 10 Hz -->
      <param name="odom_model_type" value="omni"/>
      <param name="odom_alpha5" value="0.1"/>
      <param name="transform_tolerance" value="0.2" />
      <param name="gui_publish_rate" value="10.0"/>
      <param name="laser_max_beams" value="30"/>
      <param name="min_particles" value="100"/>
      <param name="max_particles" value="1000"/>
      <param name="kld_err" value="0.05"/>
      <param name="kld_z" value="0.99"/>
      <param name="odom_alpha1" value="0.2"/>
      <param name="odom_alpha2" value="0.2"/>
      <!-- translation std dev, m -->
      <param name="odom_alpha3" value="0.8"/>
      <param name="odom_alpha4" value="0.2"/>
      <param name="laser_z_hit" value="0.5"/>
      <param name="laser_z_short" value="0.05"/>
      <param name="laser_z_max" value="0.05"/>
      <param name="laser_z_rand" value="0.5"/>
      <param name="laser_sigma_hit" value="0.2"/>
      <param name="laser_lambda_short" value="0.1"/>
      <param name="laser_lambda_short" value="0.1"/>
      <param name="laser_model_type" value="likelihood_field"/>
      <!-- <param name="laser_model_type" value="beam"/> -->
      <param name="laser_likelihood_max_dist" value="2.0"/>
      <param name="update_min_d" value="0.2"/>
      <param name="update_min_a" value="0.5"/>
      <param name="odom_frame_id" value="$(arg robot_namespace)/odom"/>
      <param name="resample_interval" value="1"/>
      <param name="transform_tolerance" value="0.1"/>
      <param name="recovery_alpha_slow" value="0.0"/>
      <param name="recovery_alpha_fast" value="0.0"/>
      <!-- <remap from="map" to="/map"/> -->
      <param name="odom_frame_id"  value="$(arg robot_namespace)/odom"/>
      <param name="base_frame_id"  value="$(arg robot_namespace)/base_footprint"/>
</node>

    <!--- Run move base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base"  output="screen"  >
      <rosparam file="$(find wpb_home_simulator)/config/$(arg robot_namespace)_nav_lidar/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find wpb_home_simulator)/config/$(arg robot_namespace)_nav_lidar/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find wpb_home_simulator)/config/$(arg robot_namespace)_nav_lidar/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find wpb_home_simulator)/config/$(arg robot_namespace)_nav_lidar/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find wpb_home_simulator)/config/$(arg robot_namespace).yaml" command="load" />
      <param name="base_global_planner" value="global_planner/GlobalPlanner" /> 
      <param name="use_dijkstra" value="true"/>
      <param name="base_local_planner" value="wpbh_local_planner/WpbhLocalPlanner" />
      <param name= "controller_frequency" value="10" type="double"/>
      <param name="scan_topic" value="$(arg robot_namespace)/scan"/>

      <!-- Set tf_prefix for frames explicity, overwriting defaults -->
      <param name="global_costmap/scan/sensor_frame" value="$(arg robot_namespace)/base_scan"/>
      <param name="global_costmap/obstacle_layer/scan/sensor_frame"
	     value="$(arg robot_namespace)/base_scan"/>
      <param name="global_costmap/global_frame" value="map"/>
      <param name="global_costmap/robot_base_frame"
	     value="$(arg robot_namespace)/base_footprint"/>
      <param name="local_costmap/scan/sensor_frame" value="$(arg robot_namespace)/base_scan"/>
      <param name="local_costmap/obstacle_layer/scan/sensor_frame"
	     value="$(arg robot_namespace)/base_scan"/>
      <param name="local_costmap/global_frame" value="$(arg robot_namespace)/odom"/>
      <param name="local_costmap/robot_base_frame"
	     value="$(arg robot_namespace)/base_footprint"/>

    </node>

      <!-- wpb_home_navi_server -->
      <node pkg="wpb_home_agent" type="wpb_home_navi_server" name="wpb_home_navi_server" output="screen">
        <rosparam file="$(find wpb_home_simulator)/config/$(arg robot_namespace).yaml" command="load" />
      </node>

    <!-- RViz and TF tree -->
    <arg name="model" default="$(find wpb_home_bringup)/urdf/wpb_home.urdf"/>
    <arg name="gui" default="false" />
    <arg name="rvizconfig" default="$(find wpb_home_simulator)/rviz/$(arg robot_namespace).rviz" />

    <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
    <param name="use_gui" value="$(arg gui)"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true"  />

    </group>

</launch>